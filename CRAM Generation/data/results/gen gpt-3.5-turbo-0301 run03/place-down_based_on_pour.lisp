(<- (desig:action-grounding ?action-designator (place-down ?resolved-action-designator))
    (spec:property ?action-designator (:type :placing))
    (spec:property ?action-designator (:object ?object-designator))
    (desig:current-designator ?object-designator ?current-object-desig)
    (spec:property ?current-object-desig (:type ?object-type))
    (spec:property ?current-object-desig (:name ?object-name))
    (-> (spec:property ?action-designator (:arms ?arms))
        (true)
        (and (man-int:robot-holding-object ?_ ?arm ?current-object-desig)
             (equal ?arms (?arm))))
    (lisp-fun man-int:get-object-transform ?current-object-desig ?object-transform)
    (lisp-fun man-int:calculate-object-faces ?object-transform (?facing-robot-face ?bottom-face))
    (-> (spec:property ?action-designator (:location ?location-designator))
        (desig:current-designator ?location-designator ?current-location-desig)
        (spec:property ?current-location-desig (:type :location))
        (lisp-fun man-int:get-location-transform ?current-location-desig ?location-transform))
    (lisp-fun man-int:get-action-gripping-effort ?object-type ?effort)
    (lisp-fun man-int:get-action-gripper-opening ?object-type ?gripper-opening)
    (equal ?objects (?current-object-desig ?current-location-desig))
    (-> (member :left ?arms)
        (and (lisp-fun man-int:get-action-trajectory :placing :left T ?objects
                       ?left-placing-pose)
             (lisp-fun man-int:get-traj-poses-by-label ?left-placing-pose :approach
                       ?left-approach-poses))
        (equal ?left-approach-poses NIL))
     (-> (member :right ?arms)
        (and (lisp-fun man-int:get-action-trajectory :placing :right T ?objects
                       ?right-placing-pose)
             (lisp-fun man-int:get-traj-poses-by-label ?right-placing-pose :approach
                       ?right-approach-poses))
        (equal ?right-approach-poses NIL))
     (-> (desig:desig-prop ?action-designator (:collision-mode ?collision-mode))
        (true)
        (equal ?collision-mode nil))
    (desig:designator :action ((:type :placing)
                               (:object ?current-object-desig)
                               (:object-type ?object-type)
                               (:object-name  ?object-name)
                               (:arms ?arms)
                               (:location ?current-location-desig)
                               (:left-approach-poses ?left-approach-poses)
                               (:right-approach-poses ?right-approach-poses)
                               (:collision-mode ?collision-mode))
                      ?resolved-action-designator))