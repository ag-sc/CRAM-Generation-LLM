(<- (desig:action-grounding ?action-designator (close ?resolved-action-designator))
    (spec:property ?action-designator (:type :closing))
    (spec:property ?action-designator (:grasp ?grasp))
    (spec:property ?action-designator (:arm ?arm))
    (desig:desig-prop ?action-designator (:container ?container-designator))
    (desig:current-designator ?container-designator ?current-container-designator)
    (spec:property ?current-container-designator (:type ?container-type))
    (equal ?container (?current-container-designator))
    (desig:desig-prop ?action-designator (:collision-mode ?collision-mode))
    (-> (equal ?arm :left)
        (and (lisp-fun get-trajectory :closing ?arm ?grasp T ?container ?lists)
             (lisp-fun man-int:get-traj-poses-by-label ?lists :closing
                       ?left-closing-poses)
             (lisp-fun man-int:get-traj-poses-by-label ?lists :initial
                       ?left-initial-pose))
        (and (equal ?left-closing-poses NIL)
             (equal ?left-initial-pose NIL)))
    (-> (equal ?arm :right)
        (and (lisp-fun get-trajectory :closing ?arm ?grasp T ?container ?lists)
             (lisp-fun man-int:get-traj-poses-by-label ?lists :closing
                       ?right-closing-poses)
             (lisp-fun man-int:get-traj-poses-by-label ?lists :initial
                       ?right-initial-pose))
        (and (equal ?right-closing-poses NIL)
             (equal ?right-initial-pose NIL)))
    (desig:designator :action ((:type :closing)
                               (:collision-mode ?collision-mode)
                               (:left-closing-poses ?left-closing-poses)
                               (:right-closing-poses ?right-closing-poses)
                               (:left-initial-pose ?left-initial-pose)
                               (:right-initial-pose ?right-initial-pose))
                      ?resolved-action-designator))