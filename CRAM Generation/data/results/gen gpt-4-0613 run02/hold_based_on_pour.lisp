(<- (desig:action-grounding ?action-designator (hold ?resolved-action-designator))
    (spec:property ?action-designator (:type :holding))
    (spec:property ?action-designator (:object ?object-designator))
    (desig:current-designator ?object-designator ?current-object-desig)
    (spec:property ?current-object-desig (:type ?object-type))
    (spec:property ?current-object-desig (:name ?object-name))
    (-> (spec:property ?action-designator (:arms ?arms))
        (true)
        (and (man-int:robot-free-hand ?_ ?arm)
             (equal ?arms (?arm))))
    (-> (spec:property ?action-designator (:grasp ?grasp))
        (true)
        (and (member ?arm ?arms)
             (lisp-fun man-int:get-action-grasps ?object-type ?arm ?grasps)
             (member ?grasp ?grasps)))
    (lisp-fun man-int:get-action-gripping-effort ?object-type ?effort)
    (lisp-fun man-int:get-action-gripper-opening ?object-type ?gripper-opening)
    (equal ?objects (?current-object-desig))
    (-> (member :left ?arms)
        (and (lisp-fun man-int:get-action-trajectory :holding :left ?grasp T ?objects
                       ?left-holding-pose))
        (equal ?left-holding-pose NIL))
    (-> (member :right ?arms)
        (and (lisp-fun man-int:get-action-trajectory :holding :right ?grasp T ?objects
                       ?right-holding-pose))
        (equal ?right-holding-pose NIL))
    (desig:designator :action ((:type :holding)
                               (:object ?current-object-desig)
                               (:object-type ?object-type)
                               (:object-name  ?object-name)
                               (:arms ?arms)
                               (:grasp ?grasp)
                               (:left-holding-pose ?left-holding-pose)
                               (:right-holding-pose ?right-holding-pose))
                      ?resolved-action-designator))