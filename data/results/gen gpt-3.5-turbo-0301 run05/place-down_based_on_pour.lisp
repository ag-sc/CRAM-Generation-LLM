(<- (desig:action-grounding ?action-designator (place-down ?resolved-action-designator))
    (spec:property ?action-designator (:type :placing))
    (spec:property ?action-designator (:object ?object-designator))
    (desig:current-designator ?object-designator ?current-object-desig)
    (spec:property ?current-object-desig (:type ?object-type))
    (spec:property ?current-object-desig (:name ?object-name))
    (-> (spec:property ?action-designator (:arms ?arms))
        (true)
        (and (man-int:robot-holding-object ?_ ?arm ?current-object-desig)
             (equal ?arms (?arm))))
    (lisp-fun man-int:get-action-gripping-effort ?object-type ?effort)
    (lisp-fun man-int:get-action-gripper-opening ?object-type ?gripper-opening)
    (-> (spec:property ?action-designator (:location ?location-designator))
        (desig:current-designator ?location-designator ?current-location-desig)
        (spec:property ?current-location-desig (:type :location))
        (spec:property ?current-location-desig (:name ?location-name))
        (lisp-fun man-int:get-location-transform ?current-location-desig ?location-transform))
    (lisp-fun man-int:get-action-trajectory :placing ?arms ?effort ?gripper-opening ?location-transform
                  ?place-down-pose)
    (lisp-fun man-int:get-traj-poses-by-label ?place-down-pose :approach ?approach-poses)
    (lisp-fun man-int:get-traj-poses-by-label ?place-down-pose :release ?release-poses)
    (-> (desig:desig-prop ?action-designator (:collision-mode ?collision-mode))
        (true)
        (equal ?collision-mode nil))
    (desig:designator :action ((:type :placing)
                               (:object ?current-object-desig)
                               (:object-type ?object-type)
                               (:object-name ?object-name)
                               (:arms ?arms)
                               (:location ?current-location-desig)
                               (:location-name ?location-name)
                               (:approach-poses ?approach-poses)
                               (:release-poses ?release-poses)
                               (:collision-mode ?collision-mode))
                      ?resolved-action-designator))