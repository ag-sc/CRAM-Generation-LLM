(<- (desig:action-grounding ?action-designator (pour ?resolved-action-designator))
    (spec:property ?action-designator (:type :pouring))
    (spec:property ?action-designator (:source-container ?source-container-designator))
    (spec:property ?action-designator (:target-container ?target-container-designator))
    (desig:current-designator ?source-container-designator ?current-source-container-desig)
    (desig:current-designator ?target-container-designator ?current-target-container-desig)
    (spec:property ?current-source-container-desig (:type ?source-container-type))
    (spec:property ?current-target-container-desig (:type ?target-container-type))
    (spec:property ?current-source-container-desig (:name ?source-container-name))
    (spec:property ?current-target-container-desig (:name ?target-container-name))
    (-> (spec:property ?action-designator (:arm ?arm))
        (true)
        (man-int:robot-free-hand ?_ ?arm))
    (lisp-fun man-int:get-container-old-transform ?current-source-container-desig ?source-container-transform)
    (lisp-fun man-int:get-container-old-transform ?current-target-container-desig ?target-container-transform)
    (-> (spec:property ?action-designator (:grasp ?grasp))
        (true)
        (and (lisp-fun man-int:get-action-grasps ?source-container-type ?arm ?source-container-transform ?grasps)
             (member ?grasp ?grasps)))
    (lisp-fun man-int:get-action-gripping-effort ?source-container-type ?effort)
    (lisp-fun man-int:get-action-gripper-opening ?source-container-type ?gripper-opening)
    (equal ?containers (?current-source-container-desig ?current-target-container-desig))
    (-> (equal ?arm :left)
        (and (lisp-fun man-int:get-action-trajectory :pouring ?arm ?grasp T ?containers
                       ?left-pouring-pose)
             (lisp-fun man-int:get-traj-poses-by-label ?left-pouring-pose :pouring-up
                       ?left-pour-up-poses)
             (lisp-fun man-int:get-traj-poses-by-label ?left-pouring-pose :pouring-down
                       ?left-pour-down-poses))
        (and (equal ?left-pour-up-poses NIL)
             (equal ?left-pour-down-poses NIL)))
    (-> (equal ?arm :right)
        (and (lisp-fun man-int:get-action-trajectory :pouring ?arm ?grasp T ?containers
                       ?right-pouring-pose)
             (lisp-fun man-int:get-traj-poses-by-label ?right-pouring-pose :pouring-up
                       ?right-pour-up-poses)
             (lisp-fun man-int:get-traj-poses-by-label ?right-pouring-pose :pouring-down
                       ?right-pour-down-poses))
        (and(equal ?right-pour-up-poses NIL)
            (equal ?right-pour-down-poses NIL)))
    (-> (desig:desig-prop ?action-designator (:collision-mode ?collision-mode))
        (true)
        (equal ?collision-mode nil))
    (desig:designator :action ((:type :pouring)
                               (:source-container ?current-source-container-desig)
                               (:target-container ?current-target-container-desig)
                               (:source-container-name ?source-container-name)
                               (:target-container-name ?target-container-name)
                               (:arm ?arm)
                               (:gripper-opening ?gripper-opening)
                               (:effort ?effort)
                               (:grasp ?grasp)
                               (:left-pour-up-poses ?left-pour-up-poses)
                               (:right-pour-up-poses ?right-pour-up-poses)
                               (:left-pour-down-poses ?left-pour-down-poses)
                               (:right-pour-down-poses ?right-pour-down-poses)
                               (:collision-mode ?collision-mode))
                      ?resolved-action-designator))