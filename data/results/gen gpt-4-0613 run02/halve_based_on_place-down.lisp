(<- (desig:action-grounding ?action-designator (halve ?current-object-designator ?knife-designator ?cutting-board-designator ?left-half-designator ?right-half-designator))
    (spec:property ?action-designator (:type :cutting))
    (-> (spec:property ?action-designator (:object ?object-designator))
        (or (cpoe:object-in-hand ?object-designator ?knife-designator)
            (and (format "WARNING: Wanted to cut an object ~a with knife ~a, ~
                          but it's not in the hand.~%" ?object-designator ?knife-designator)
                 ))
        (cpoe:object-in-hand ?object-designator ?knife-designator))
    (-> (spec:property ?action-designator (:target ?cutting-board-designator))
        (cpoe:object-on ?object-designator ?cutting-board-designator))
    (-> (spec:property ?action-designator (:result ?left-half-designator))
        (desig:designator :object ((:type :food) (:name (string-append (spec:property ?current-object-designator (:name)) "-left-half"))))
        (spec:property ?left-half-designator (:type :food))
        (spec:property ?left-half-designator (:name (string-append (spec:property ?current-object-designator (:name)) "-left-half"))))
    (-> (spec:property ?action-designator (:result ?right-half-designator))
        (desig:designator :object ((:type :food) (:name (string-append (spec:property ?current-object-designator (:name)) "-right-half"))))
        (spec:property ?right-half-designator (:type :food))
        (spec:property ?right-half-designator (:name (string-append (spec:property ?current-object-designator (:name)) "-right-half"))))
    (once (or (cpoe:object-in-hand ?knife-designator ?object-designator)
              (spec:property ?action-designator (:object ?object-designator))))
    (desig:current-designator ?object-designator ?current-object-designator))