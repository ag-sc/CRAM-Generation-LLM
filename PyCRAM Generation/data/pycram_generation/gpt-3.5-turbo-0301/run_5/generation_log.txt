Warning: Generation ended unexpectedly, Reason: length
Reference Action: transport, Target Action: wipe
Response:
ChatCompletion(id='chatcmpl-8dJ5YLwJmx1hJH4QA7jMbwSqqNAUa', choices=[Choice(finish_reason='length', index=0, message=ChatCompletionMessage(content='```python\nfrom pycram.designator import ActionDesignatorDescription\nfrom pycram.designators.object_designator import ObjectDesignatorDescription, BelieveObject\nfrom pycram.designators.location_designator import CostmapLocation\nfrom pycram.designators.motion_designator import MoveTCPMotion, MoveGripperMotion\nfrom pycram.designators.action_designator import NavigateAction, ParkArmsAction\nfrom pycram.robot_descriptions import robot_description\nfrom pycram.enums import Arms\nfrom pycram.pose import Pose\nfrom typing import List, Union\n\nclass WipeAction(ActionDesignatorDescription):\n    class Action(ActionDesignatorDescription.Action):\n        object_cloth_designator: ObjectDesignatorDescription.Object\n        wipe_locations: List[Pose]\n        lengths: List[float]\n        widths: List[float]\n        arms: List[str]\n\n        def perform(self) -> None:\n            robot_desig = BelieveObject(names=[robot_description.name])\n            ParkArmsAction.Action(Arms.BOTH).perform()\n            pickup_loc = CostmapLocation(target=self.object_cloth_designator, reachable_for=robot_desig.resolve(), reachable_arm=self.arms[0])\n            pickup_pose = None\n            for pose in pickup_loc:\n                if self.arms[0] in pose.reachable_arms:\n                    pickup_pose = pose\n                    break\n            if not pickup_pose:\n                raise ObjectUnfetchable(f"Found no pose for the robot to grasp the object: {self.object_cloth_designator} with arm: {self.arms[0]}")\n            NavigateAction([pickup_pose.pose]).resolve().perform()\n            PickUpAction.Action(self.object_cloth_designator, self.arms[0], "top").perform()\n            ParkArmsAction.Action(Arms.BOTH).perform()\n\n            for i, loc in enumerate(self.wipe_locations):\n                NavigateAction([loc]).resolve().perform()\n                MoveTCPMotion.Action(loc, self.arms[0]).perform()\n                MoveGripperMotion.Action("open", self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1], loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + self.widths[i], loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + self.widths[i], loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + self.widths[i] + 0.1, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + self.widths[i] + 0.1, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 2 * self.widths[i] + 0.1, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 2 * self.widths[i] + 0.1, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 2 * self.widths[i] + 0.2, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 2 * self.widths[i] + 0.2, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 3 * self.widths[i] + 0.2, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 3 * self.widths[i] + 0.2, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 3 * self.widths[i] + 0.3, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 3 * self.widths[i] + 0.3, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 4 * self.widths[i] + 0.3, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 4 * self.widths[i] + 0.3, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 4 * self.widths[i] + 0.4, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 4 * self.widths[i] + 0.4, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 5 * self.widths[i] + 0.4, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 5 * self.widths[i] + 0.4, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 5 * self.widths[i] + 0.5, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 5 * self.widths[i] + 0.5, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 6 * self.widths[i] + 0.5, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 6 * self.widths[i] + 0.5, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 6 * self.widths[i] + 0.6, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 6 * self.widths[i] + 0.6, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 7 * self.widths[i] + 0.6, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 7 * self.widths[i] + 0.6, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 7 * self.widths[i] + 0.7, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 7 * self.widths[i] + 0.7, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 8 * self.widths[i] + 0.7, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 8 * self.widths[i] + 0.7, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 8 * self.widths[i] + 0.8, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 8 * self.widths[i] + 0.8, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 9 * self.widths[i] + 0.8, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 9 * self.widths[i] + 0.8, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0], loc.position[1] + 9 * self.widths[i] + 0.9, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 9 * self.widths[i] + 0.9, loc.position[2]], orientation=loc.orientation), self.arms[0]).perform()\n                MoveTCPMotion.Action(Pose(position=[loc.position[0] + self.lengths[i], loc.position[1] + 10', role='assistant', function_call=None, tool_calls=None), logprobs=None)], created=1704378860, model='gpt-3.5-turbo-0301', object='chat.completion', system_fingerprint=None, usage=CompletionUsage(completion_tokens=2450, prompt_tokens=1648, total_tokens=4098))

